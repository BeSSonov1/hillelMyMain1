// '12' + 34 // = 1234 "когда у нас хотя бы один из оперантов для "+" это строка, тогда другой автоматически конвертируется в строку".

// 12 + 34   // = 46 "слева и справа оператора '+' стоят операнты чесел, поэтому ответ ровняется суме".

// 100 / '10' // = 10 "другие математические операторы работают наоборот, они всегд пытаются конвертировать два операнта в число".

// 100 * 'f' // = NaN "это значит что ответ 'не число', так как число не умножается на текст".

// '7' / null // = Infinity "математичаский опратор '/' выполняет операцию деленмя левого операнта '7' (преподнесенного как число в текстеесте), на значение 'null' исходя из математических правил, ответ будет бесконечность"





// '2' + '4' -> 6  

let a0 = (+ '2') + (+ '4')  // способ 1 
let a1 = Number('2') + Number('4') // способ 2
let a2 = parseInt('2') + parseInt('4') // способ 3
let a3 = parseFloat('2') + parseFloat('4') // способ 4



// 7.2 / '1.2' -> 6 

let b0 = 7.2 / (+ '1.2') // способ 1 
let b1 = 7.2 / Number('1.2') // способ 2
let b2 = 7.2 / parseInt(1.2) // способ 3
let b3 = 7.2 / parseFloat('1.2') // способ 4



// 'this' + ' simple' + ' string' -> 'this simple string'

let c0 = ' string'
''.concat('this ' +'simple ', c0) // способ 1



// 'answer' + ' is:' + '30' + 5 -> 'answer is 35' 

let d0 = 'answer' + ' is:' + (+'30') + 5 // способ 1 
let d1 = 'answer' + ' is:' + Number('30') + 5 // способ 2
let d2 = 'answer' + ' is:' + parseInt('30') + 5 // способ 3
let d3 = 'answer' + ' is:' + parseFloat('30') + 5 // способ 4
let d5 = ' is '
''.concat('answer', d5, (+ ' 30') + 5) // способ 5














